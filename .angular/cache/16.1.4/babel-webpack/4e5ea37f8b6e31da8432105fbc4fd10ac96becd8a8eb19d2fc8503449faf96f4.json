{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/seller.service\";\nclass AuthguardGuard {\n  constructor(sellerservice) {\n    this.sellerservice = sellerservice;\n  }\n  canActivate(route, state) {\n    if (localStorage.getItem('seller')) {\n      return true;\n    }\n    return this.sellerservice.isSellerLoggedIn;\n  }\n}\nAuthguardGuard.ɵfac = function AuthguardGuard_Factory(t) {\n  return new (t || AuthguardGuard)(i0.ɵɵinject(i1.SellerService));\n};\nAuthguardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthguardGuard,\n  factory: AuthguardGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthguardGuard };","map":{"version":3,"names":["AuthguardGuard","constructor","sellerservice","canActivate","route","state","localStorage","getItem","isSellerLoggedIn","i0","ɵɵinject","i1","SellerService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\Ap\\ecom\\src\\app\\authguard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SellerService } from './services/seller.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor(private sellerservice:SellerService){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(localStorage.getItem('seller')){\n        return true\n      }\n      return this.sellerservice.isSellerLoggedIn;\n  }\n  \n}\n"],"mappings":";;AAKA,MAGaA,cAAc;EACzBC,YAAoBC,aAA2B;IAA3B,KAAAA,aAAa,GAAbA,aAAa;EAAgB;EACjDC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAC;MAChC,OAAO,IAAI;;IAEb,OAAO,IAAI,CAACL,aAAa,CAACM,gBAAgB;EAC9C;;AATWR,cAAc,C;mBAAdA,cAAc,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAdZ,cAAc,C;SAAdA,cAAc;EAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPf,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}